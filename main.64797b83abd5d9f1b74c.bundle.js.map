{"version":3,"file":"main.64797b83abd5d9f1b74c.bundle.js","sources":["webpack:///./src/lib/markup.js"],"sourcesContent":["/* eslint-env browser */\n\nlet cachedParseMarkup;\n\n// We use a function creator to make the reference to `document` lazy. At the\n// same time, it's eager enough to throw in <LocalizationProvider> as soon as\n// it's first mounted which reduces the risk of this error making it to the\n// runtime without developers noticing it in development.\nexport default function createParseMarkup() {\n  if (document === undefined) {\n    // We can't use <template> to sanitize translations.\n    throw new Error(`\n      document\" is undefined. Without it, translations cannot\n      be safely sanitized. Consult the documentation at\n      https://github.com/projectfluent/fluent.js/wiki/React-Overlays.\n    `);\n  }\n\n  if (!cachedParseMarkup) {\n    const template = document.createElement('template');\n    cachedParseMarkup = function parseMarkup(str) {\n      template.innerHTML = str;\n      return Array.from(template.content.childNodes);\n    };\n  }\n\n  return cachedParseMarkup;\n}\n"],"mappings":"AAEA","sourceRoot":""}